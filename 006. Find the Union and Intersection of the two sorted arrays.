//Find the Union and Intersection of the two sorted arrays.

//UNION

#include <iostream>
using namespace std;
void findunion(int arr1[],int m,int arr2[],int n){
    int i=0,j=0;
    while(i<m && j<n){
        if(arr1[i]<arr2[j]){
            cout<<arr1[i++];
            cout<<endl;
        }
        else if(arr1[i]>arr2[j]){
            cout<<arr2[j++];
            cout<<endl;
        }
        else{
            cout<<arr2[j++];
            cout<<endl;
        }
    }
    while(i<m){
        cout<<arr1[i++];
        cout<<endl;
    }
    while(j<n){
        cout<<arr2[j++];
        cout<<endl;
    }
}
int main()
{
    int arr1[]={1,3,5,7,9,11,13,15,17};
    int arr2[]={2,4,6,8,10,12,14,16,18,19,20};
    int m=sizeof(arr1)/sizeof(arr1[0]);
    int n=sizeof(arr2)/sizeof(arr2[0]);
    findunion(arr1,m,arr2,n);
    return 0;
}


/*-----------------------------------------------------------------------------*/

//INTERSECTION

#include <iostream>
using namespace std;

void findIntersection(int arr3[],int m,int arr4[],int n){
    int i=0,j=0;
    while(i<m && j<n){
        if(arr3[i]<arr4[j]){
            i++;
            cout<<endl;
        }
        else if (arr3[i]>arr4[j]){
            j++;
            cout<<endl;
        }
        else if (arr3[i]==arr4[j]){
            cout<<arr4[j++];
            i++;
            cout<<endl;
        }
    }
}

int main(){
    int arr3[]={1,2,3,4,5,7,9,6};
    int arr4[]={1,2,3,4,6,8,10};
    int m=sizeof(arr3)/sizeof(arr3[0]);
    int n=sizeof(arr4)/sizeof(arr4[0]);
    findIntersection(arr3,m,arr4,n);
    return 0;
}
